{"version":3,"sources":["components/SidebarData.jsx","components/Navbar.jsx","components/Home.jsx","utils/Const.js","utils/Auth.js","components/Login.jsx","components/Register.jsx","components/Users.jsx","utils/StringUtils.js","components/Products.jsx","components/Shops.jsx","components/Suppliers.jsx","components/EditProduct.jsx","components/EditShop.jsx","components/EditSupplier.jsx","components/EditUser.jsx","components/AddProduct.jsx","components/AddShop.jsx","components/AddSupplier.jsx","components/Footer.jsx","components/Logout.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SideBarData","title","path","icon","cName","withRouter","props","useState","sidebar","setSidebar","showSidebar","location","pathname","Provider","value","className","to","onClick","src","width","alt","map","item","index","Home","fetchBase","cookieExpire","date","Date","setTime","now","Auth","useCookies","cookies","setCookie","removeCookie","authToken","token","login","email","password","a","fetch","method","headers","mode","body","JSON","stringify","then","response","text","data","toLowerCase","expires","register","registerUser","logout","auth","setEmail","setPassword","error","setError","e","preventDefault","trim","history","push","console","log","useEffect","undefined","id","onSubmit","htmlFor","type","name","onChange","target","href","required","min","max","users","setUsers","page","setPage","pagination","useParams","isNaN","parseInt","showUsers","changePage","goToPage","nextOrPrev","nextPage","shopList","res","json","length","deleteUser","status","user","surname","listToString","list","param","element","sort","join","products","setProducts","brands","setBrands","setName","brand","setBrand","showProducts","getBrands","productList","deleteProduct","formData","FormData","get","placeholder","forhtml","i","class","product","color","stock","datePurchase","pricePurchase","priceSale","discount","discontinued","categories","batches","shops","setShops","showShops","deleteShop","shop","phone","postcode","suppliers","setSuppliers","showSuppliers","supplierList","deleteSupplier","supplier","setProduct","getProductData","setProductValue","updateProduct","for","defaultValue","checked","setShop","getShopData","setShopValue","updateShop","pattern","setSupplier","getSupplierData","setSupplierValue","updateSupplier","setUser","getUserData","setUserValue","updateUser","setCategories","getCategories","addProduct","category","event","filter","c","setCategory","addShop","Footer","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aa07cfe.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const SideBarData = [\r\n    {\r\n        title: 'Inicio',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n      },\r\n      {\r\n        title: 'Tiendas',\r\n        path: '/tiendas/0',\r\n        icon: <FaIcons.FaWarehouse />,\r\n        cName: 'nav-text'\r\n      },\r\n      {\r\n        title: 'Productos',\r\n        path: '/productos/0',\r\n        icon: <FaIcons.FaShoppingCart />,\r\n        cName: 'nav-text'\r\n      },\r\n      {\r\n        title: 'Proveedores',\r\n        path: '/proveedores/0',\r\n        icon: <FaIcons.FaTruck />,\r\n        cName: 'nav-text'\r\n      },\r\n      {\r\n        title: 'Usuarios',\r\n        path: '/usuarios',\r\n        icon: <IoIcons.IoMdPeople />,\r\n        cName: 'nav-text'\r\n      }\r\n]","import React, {useState} from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { SideBarData } from './SidebarData';\r\nimport '../css/Navbar.css';\r\nimport { IconContext } from 'react-icons';\r\n\r\nfunction Navbar(props) {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    const showSidebar = () => {\r\n        if (props.location.pathname !== \"/\") {\r\n            setSidebar(!sidebar);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <IconContext.Provider value={{className: \"nav-icons\"}}>\r\n            <div className='navbar'>\r\n                <div className=\"left-menu\">\r\n                    <Link to='#' className='menu-bars' onClick={showSidebar} >\r\n                        <FaIcons.FaBars/>\r\n                    </Link>\r\n                    <div className='logo'>\r\n                        <Link to=\"/\" className='logo-link'>\r\n                            <img src='../img/logo.svg' width='150px' alt='Stock Control Logo' />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='right-menu'>\r\n                    <div>\r\n                        <Link to=\"#\" className='darkTheme'>\r\n                            <FaIcons.FaMoon />\r\n                            <span className=\"darkTheme-text\">Modo oscuro</span>\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/logout\" className='logout'>\r\n                            <IoIcons.IoMdCloseCircle />\r\n                            <span className=\"logout-text\">Cerrar sesión</span>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* TODO: crear div con z-index: 1 heigh y witdh al 100vw y vh, position fixed, 0 0. y al div sidebar zindex2, cuando hago clic en el primer div tambien se cierra, como este: */}\r\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'} onClick={showSidebar}>\r\n                <ul className='nav-menu-items'>\r\n                    <li className=\"navbar-toggle\">\r\n                        <Link to=\"#\" className=\"menu-bars\">\r\n                            <AiIcons.AiOutlineClose />\r\n                        </Link>\r\n                    </li>\r\n                    {SideBarData.map((item, index) => {\r\n                        return (\r\n                            <li key={index} className={item.cName}>\r\n                                <Link to={item.path}>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n        </IconContext.Provider>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className='home'>\r\n            <h1>Home</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","const fetchBase = \"http://localhost:8080\";\r\n\r\nconst treshHold = 30*24*60*60*1000;\r\nconst cookieExpire = () => { \r\n    const date = new Date();\r\n    date.setTime(Date.now() + treshHold);\r\n    return date;\r\n}\r\n\r\nexport { fetchBase, cookieExpire }","import {useCookies} from 'react-cookie';\r\nimport {fetchBase, cookieExpire} from '../utils/Const'\r\n\r\n\r\nconst Auth = () => {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['authtoken']);\r\n\r\n    const authToken = cookies.token;\r\n\r\n    const login = async (email, password) => {\r\n        let token;\r\n\r\n        await fetch(`${fetchBase}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify({\"email\": email, \"password\": password}),\r\n        }).then(response => response.text())\r\n            .then(data => token = data);\r\n        if (token.toLowerCase() !== email.toLowerCase()) {\r\n            setCookie(\"token\", token, { expires: cookieExpire(), path: \"/\" });\r\n        }\r\n\r\n        return token;\r\n    }\r\n\r\n    const register = async (registerUser) => {\r\n        let token;\r\n\r\n        await fetch(`${fetchBase}/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify(registerUser),\r\n        }).then(response => response.text())\r\n            .then(data => token = data);\r\n\r\n        return token;\r\n    }\r\n\r\n    const logout = () => {\r\n        removeCookie(\"token\", {path: \"/\"});\r\n    }\r\n\r\n    return { authToken, login, register, logout };\r\n}\r\n\r\nexport {Auth};","import React, {useEffect, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst Login = (props) => {\r\n    const auth = Auth();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const login = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setError(\"\");\r\n\r\n        if (!email.trim()) {\r\n            setError(\"Email o contraseña incorrecta\");\r\n            return;\r\n        }\r\n\r\n        if (!password.trim()) {\r\n            setError(\"Email o contraseña incorrecta\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let token = await auth.login(email, password)\r\n\r\n            if (token.toLowerCase() !== email.toLowerCase()) {\r\n                props.history.push(\"/productos/0\");\r\n\r\n            } else {\r\n                setError(\"Email o contraseña incorrecta\");\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Si el token ya existe, nos vamos a productos\r\n        if (auth.authToken !== undefined) {\r\n            props.history.push(\"/productos/0\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <main>\r\n            <section id=\"login\">\r\n                <h1>¡Hola de nuevo!</h1>\r\n                {error.trim() && <p className=\"error\">{error}</p>}\r\n                <form className=\"loginForm\" onSubmit={login}>\r\n                    <label htmlFor=\"usuario\">Correo electrónico</label>\r\n                    <input type=\"text\" id=\"usuario\" name=\"\" onChange={e => setEmail(e.target.value)}\r\n                           value={email}/>\r\n                    <label htmlFor=\"pass\">Contraseña</label>\r\n                    <input type=\"password\" id=\"pass\" name=\"\" onChange={e => setPassword(e.target.value)}\r\n                           value={password}/>\r\n                    <span>\r\n                        <a href=\"#\">¿No recuerdas tu contraseña?</a>\r\n                    </span>\r\n                    <div className=\"submit\">\r\n                        <button>Acceder</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(Login);","import React, {useEffect, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst Register = (props) => {\r\n    const auth = Auth();\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const register = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setError(\"\");\r\n\r\n        const token = await auth.register({\"email\": email, \"password\": password})\r\n\r\n        if (token != null) {\r\n            props.history.push(\"/productos/0\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <section id=\"register\">\r\n                <h1>Crear una cuenta</h1>\r\n                <form className=\"\" onSubmit={register}>\r\n                    {error.trim() && <p className=\"error\">{error}</p>}\r\n                    <label htmlFor=\"email\">Correo electrónico</label>\r\n                    <input type=\"email\" id=\"email\" name=\"email\" required onChange={(e) => setEmail(e.target.value)} value={email}/>\r\n\r\n                    <label htmlFor=\"pass\">Contraseña</label>\r\n                    <input type=\"password\" id=\"pass\" name=\"pass\" min=\"6\" max=\"20\" required onChange={(e) => setPassword(e.target.value)} value={password}/>\r\n\r\n                    <div className=\"submit\">\r\n                        <button>Registrar</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default withRouter(Register);","import React,  { useEffect, useState } from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams, Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst Users = (props) => {\r\n\r\n    const auth = Auth();\r\n    const [users, setUsers] = useState(null);\r\n    // Paginación\r\n    const [page, setPage] = useState(0);\r\n    const {pagination} = useParams();\r\n\r\n    useEffect(() => {\r\n        const changePage = () => {\r\n            if (pagination === undefined\r\n                || isNaN(parseInt(pagination))\r\n                || pagination < 0) {\r\n                    props.history.push(\"/usuarios/0\");\r\n                    showUsers(auth.authToken, 0);\r\n                    return;\r\n            }\r\n            setPage(parseInt(pagination));\r\n            showUsers(auth.authToken, pagination);\r\n        }\r\n\r\n        changePage();\r\n    }, [])\r\n\r\n    // TODO: hacer funcion para cambiar el valor de page y hacer navegacion\r\n    const goToPage = (nextOrPrev) => {\r\n        const nextPage = page + nextOrPrev;\r\n        setPage(nextPage);\r\n        if (nextPage === undefined\r\n            || isNaN(parseInt(nextPage))\r\n            || nextPage < 0) {\r\n                props.history.push(\"/usuarios/0\");\r\n                showUsers(auth.authToken, 0);\r\n                return;\r\n        }\r\n        props.history.push(`/usuarios/${nextPage}`);\r\n        showUsers(auth.authToken, nextPage);\r\n    }\r\n\r\n    const showUsers = async (token, page=0) => {\r\n        const shopList = [];\r\n\r\n        await fetch(`${fetchBase}/usuarios?page=${page}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => shopList.push(...data));\r\n\r\n        // Si no hay elementos en la lista, me lleva a la ultima pagina donde los habia\r\n        if (shopList.length > 0) {\r\n            setUsers(shopList);\r\n        } else {\r\n            goToPage(-1)\r\n        }\r\n    }\r\n\r\n    const deleteUser = async (id, token) => {\r\n        let response;\r\n\r\n        await fetch(`${fetchBase}/usuario/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => response = res.status);\r\n\r\n        console.log(response);\r\n        if (response === 200) {\r\n            showUsers(token)\r\n        }\r\n    }\r\n\r\n    return (\r\n         <main>\r\n            <h1 className=\"main-title\">Tiendas</h1>\r\n            <div className='users'>\r\n                <div className=\"container\">\r\n                    <table className=\"responsive-table\">\r\n                        <thead className=\"table-head\">\r\n                            <tr className=\"table-row\">\r\n                                <th className=\"table-head-title\">Id</th>\r\n                                <th className=\"table-head-title\">Nombre</th>\r\n                                <th className=\"table-head-title\">Apellidos</th>\r\n                                <th className=\"table-head-title\">Email</th>\r\n                                <th className=\"table-head-title\">Editar</th>\r\n                                <th className=\"table-head-title\">Borrar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table-body\">\r\n                            {\r\n                                users && users.map(user =>\r\n                                <tr className=\"table-row\" key={user.id}>\r\n                                    <td className=\"table-body-text\">{user.id}</td>\r\n                                    <td className=\"table-body-text\">{user.name}</td>\r\n                                    <td className=\"table-body-text\">{user.surname}</td>\r\n                                    <td className=\"table-body-text\">{user.email}</td>\r\n                                    <td className=\"table-body-text table-body-btn\"><Link to={`/usuario/${user.id}`} className=\"icon\"><FaIcons.FaEdit /></Link></td>\r\n                                    <td className=\"table-body-text table-body-btn\"><a onClick={() => deleteUser(user.id, auth.authToken)}><FaIcons.FaTrash /></a></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"btn-paginate\">\r\n                        <button onClick={() => goToPage(-1)}>Anterior</button>\r\n                        <button onClick={()=> goToPage(1)}>Siguiente</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default withRouter(Users);\r\n","const listToString = (list, param) => {\r\n    return list.map(element => {\r\n        return element[param];\r\n    }).sort().join(\", \");\r\n}\r\n\r\nexport {listToString}","import React,  { useEffect, useState } from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { listToString } from '../utils/StringUtils';\r\nimport { withRouter, useParams, Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst Products = (props) => {\r\n\r\n    const auth = Auth();\r\n    const [products, setProducts] = useState(null);\r\n    const [brands, setBrands] = useState(null);\r\n    // Paginación\r\n    const [name, setName] = useState(\"\");\r\n    const [brand, setBrand] = useState(\"\");\r\n    const [page, setPage] = useState(0);\r\n    const {pagination} = useParams();\r\n\r\n    useEffect(() => {\r\n        // TODO: reutilizar funcion :D\r\n        const changePage = () => {\r\n            if (pagination === undefined\r\n                || isNaN(parseInt(pagination))\r\n                || pagination < 0) {\r\n                    props.history.push(\"/productos/0\");\r\n                    showProducts(auth.authToken, 0, name, brand);\r\n                    return;\r\n            }\r\n            setPage(parseInt(pagination));\r\n            showProducts(auth.authToken, pagination, name, brand);\r\n        }\r\n\r\n        changePage();\r\n        getBrands(auth.authToken);\r\n    }, [])\r\n\r\n    const goToPage = (nextOrPrev) => {\r\n        const nextPage = page + nextOrPrev;\r\n        if (nextPage === undefined\r\n            || isNaN(parseInt(nextPage))\r\n            || nextPage < 0) {\r\n                props.history.push(\"/productos/0\");\r\n                showProducts(auth.authToken, 0, name, brand);\r\n                return;\r\n        }\r\n        setPage(nextPage);\r\n        props.history.push(`/productos/${nextPage}`);\r\n        showProducts(auth.authToken, nextPage, name, brand);\r\n    }\r\n\r\n    const showProducts = async (token, page=0, name=\"\", brand=\"\") => {\r\n        const productList = [];\r\n\r\n        await fetch(`${fetchBase}/productos?page=${page}&name=${name}&brand=${brand}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => productList.push(...data));\r\n\r\n        if (productList.length > 0) {\r\n            setProducts(productList);\r\n        } else {\r\n            props.history.push(\"/productos/0\")\r\n        }\r\n    }\r\n\r\n    const deleteProduct = async (id, token) => {\r\n        let response;\r\n\r\n        await fetch(`${fetchBase}/producto/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => response = res.status);\r\n\r\n        console.log(response);\r\n        if (response === 200) {\r\n            showProducts(token, page, name, brand)\r\n        }\r\n    }\r\n    const getBrands = async (token) => {\r\n\r\n        await fetch(`${fetchBase}/productos/brand`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setBrands([...data]));\r\n    }\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        const name = formData.get(\"name\");\r\n        const brands = formData.get(\"brands\");\r\n        setName(name === undefined ? \"\" : name);\r\n        setBrand(brands === undefined ? \"\" : brands);\r\n        showProducts(auth.authToken, page, name, brands);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"title-search\">\r\n                <h1 className=\"main-title title-products\">Productos</h1>\r\n                <div className='search'>\r\n                    <form onSubmit={search}>\r\n                        <input className=\"searchBar\" type=\"text\" placeholder=\"Busca un producto\" name=\"name\" />\r\n                        <div className=\"select\">\r\n                            <label forhtml=\"brands\">Marca:</label>\r\n                            <select id=\"brands\" name=\"brands\" className='searchSelect'>\r\n                                <option value=\"\">Todas</option>\r\n                                {\r\n                                    brands && brands.map((brand, i) =>\r\n                                        <option value={brand} key={i}>{brand}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"submit\"><FaIcons.FaSearch /><span class=\"search-text-btn\">Buscar</span></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className='products'>\r\n                {/* <!-- Page wrapper/Container Section --> */}\r\n                <div className=\"container container-products\">\r\n                    {/* <!-- Responsive Table Section --> */}\r\n                    <table className=\"responsive-table\">\r\n                        {/* <!-- Responsive Table Header Section --> */}\r\n                        <thead className=\"table-head\">\r\n                            <tr className=\"table-row\">\r\n                                <th className=\"table-head-title\">Id</th>\r\n                                <th className=\"table-head-title\">Marca</th>\r\n                                <th className=\"table-head-title\">Nombre</th>\r\n                                <th className=\"table-head-title\">Color</th>\r\n                                <th className=\"table-head-title\">Stock</th>\r\n                                <th className=\"table-head-title\">Fecha de compra</th>\r\n                                <th className=\"table-head-title\">Precio de compra</th>\r\n                                <th className=\"table-head-title\">Precio de venta</th>\r\n                                <th className=\"table-head-title\">Descuento</th>\r\n                                <th className=\"table-head-title\">Descatalogado</th>\r\n                                <th className=\"table-head-title\">Categorías</th>\r\n                                <th className=\"table-head-title\">Lotes</th>\r\n                                <th className=\"table-head-title\">Editar</th>\r\n                                <th className=\"table-head-title\">Borrar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {/* <!-- Responsive Table Body Section --> */}\r\n                        <tbody className=\"table-body\">\r\n                            {\r\n                                products && products.map(product =>\r\n                                <tr className=\"table-row\" key={product.id}>\r\n                                    <td className=\"table-body-text\">{product.id}</td>\r\n                                    <td className=\"table-body-text\">{product.brand}</td>\r\n                                    <td className=\"table-body-text\">{product.name}</td>\r\n                                    <td className=\"table-body-text\">{product.color}</td>\r\n                                    <td className=\"table-body-text\">{product.stock}</td>\r\n                                    <td className=\"table-body-text\">{product.datePurchase}</td>\r\n                                    <td className=\"table-body-text\">{product.pricePurchase}</td>\r\n                                    <td className=\"table-body-text\">{product.priceSale}</td>\r\n                                    <td className=\"table-body-text\">{product.discount}</td>\r\n                                    <td className=\"table-body-text\">{product.discontinued ? \"Sí\" : \"No\"}</td>\r\n                                    <td className=\"table-body-text\">{listToString(product.categories, \"name\")}</td>\r\n                                    <td className=\"table-body-text\">{listToString(product.batches, \"expirationDate\")}</td>\r\n                                    <td className=\"table-body-text table-body-btn\"><Link to={`/producto/${product.id}`} className=\"icon\"><FaIcons.FaEdit /></Link></td>\r\n                                    <td className=\"table-body-text table-body-btn\"><a className=\"icon\" onClick={() => deleteProduct(product.id, auth.authToken)}><FaIcons.FaTrash /></a></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"btns\">\r\n                        <div className=\"btn-add\">\r\n                            <button><Link to={`/producto/nuevo`}>Añadir producto</Link></button>\r\n                        </div>\r\n                        <div className=\"btn-paginate\">\r\n                            <button onClick={() => goToPage(-1)}>Anterior</button>\r\n                            <button onClick={() => goToPage(1)}>Siguiente</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(Products);\r\n","import React,  { useEffect, useState } from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams, Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst Shops = (props) => {\r\n\r\n    const auth = Auth();\r\n    const [shops, setShops] = useState(null);\r\n    // Paginación\r\n    const [page, setPage] = useState(0);\r\n    const {pagination} = useParams();\r\n\r\n    useEffect(() => {\r\n        const changePage = () => {\r\n            if (pagination === undefined\r\n                || isNaN(parseInt(pagination))\r\n                || pagination < 0) {\r\n                    props.history.push(\"/tiendas/0\");\r\n                    showShops(auth.authToken, 0);\r\n                    return;\r\n            }\r\n            setPage(parseInt(pagination));\r\n            showShops(auth.authToken, pagination);\r\n        }\r\n\r\n        changePage();\r\n    }, [])\r\n\r\n    // TODO: hacer funcion para cambiar el valor de page y hacer navegacion\r\n    const goToPage = (nextOrPrev) => {\r\n        const nextPage = page + nextOrPrev;\r\n        setPage(nextPage);\r\n        if (nextPage === undefined\r\n            || isNaN(parseInt(nextPage))\r\n            || nextPage < 0) {\r\n                props.history.push(\"/tiendas/0\");\r\n                showShops(auth.authToken, 0);\r\n                return;\r\n        }\r\n        props.history.push(`/tiendas/${nextPage}`);\r\n        showShops(auth.authToken, nextPage);\r\n    }\r\n\r\n    const showShops = async (token, page=0) => {\r\n        const shopList = [];\r\n\r\n        await fetch(`${fetchBase}/tiendas?page=${page}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => shopList.push(...data));\r\n\r\n        // Si no hay elementos en la lista, me lleva a la ultima pagina donde los habia\r\n        if (shopList.length > 0) {\r\n            setShops(shopList);\r\n        } else {\r\n            goToPage(-1)\r\n        }\r\n    }\r\n\r\n    const deleteShop = async (id, token) => {\r\n        let response;\r\n\r\n        await fetch(`${fetchBase}/tienda/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => response = res.status);\r\n\r\n        console.log(response);\r\n        if (response === 200) {\r\n            showShops(token)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <h1 className=\"main-title\">Tiendas</h1>\r\n            <div className='shops'>\r\n                {/* <!-- Page wrapper/Container Section --> */}\r\n                <div className=\"container\">\r\n                    {/* <!-- Responsive Table Section --> */}\r\n                    <table className=\"responsive-table\">\r\n                        {/* <!-- Responsive Table Header Section --> */}\r\n                        <thead className=\"table-head\">\r\n                            <tr className=\"table-row\">\r\n                                <th className=\"table-head-title\">Id</th>\r\n                                <th className=\"table-head-title\">Nombre</th>\r\n                                <th className=\"table-head-title\">Localización</th>\r\n                                <th className=\"table-head-title\">Teléfono</th>\r\n                                <th className=\"table-head-title\">Email</th>\r\n                                <th className=\"table-head-title\">Código Postal</th>\r\n                                <th className=\"table-head-title\">Editar</th>\r\n                                <th className=\"table-head-title\">Borrar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {/* <!-- Responsive Table Body Section --> */}\r\n                        <tbody className=\"table-body\">\r\n                            {\r\n                                shops && shops.map(shop =>\r\n                                <tr className=\"table-row\" key={shop.id}>\r\n                                    <td className=\"table-body-text\">{shop.id}</td>\r\n                                    <td className=\"table-body-text\">{shop.name}</td>\r\n                                    <td className=\"table-body-text\">{shop.location}</td>\r\n                                    <td className=\"table-body-text\">{shop.phone}</td>\r\n                                    <td className=\"table-body-text\">{shop.email}</td>\r\n                                    <td className=\"table-body-text\">{shop.postcode}</td>\r\n                                    <td className=\"table-body-text table-body-btn\"><Link to={`/tienda/${shop.id}`} className=\"icon\"><FaIcons.FaEdit /></Link></td>\r\n                                    <td className=\"table-body-text table-body-btn\"><a onClick={() => deleteShop(shop.id, auth.authToken)}><FaIcons.FaTrash /></a></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"btns\">\r\n                        <div className=\"btn-add\">\r\n                            <button><Link to={`/tienda/nuevo`}>Añadir tienda</Link></button>\r\n                        </div>\r\n                        <div className=\"btn-paginate\">\r\n                            <button onClick={() => goToPage(-1)}>Anterior</button>\r\n                            <button onClick={() => goToPage(1)}>Siguiente</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(Shops);\r\n","import React,  { useEffect, useState } from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams, Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst Suppliers = (props) => {\r\n\r\n    const auth = Auth();\r\n    const [suppliers, setSuppliers] = useState(null);\r\n    // Paginación\r\n    const [page, setPage] = useState(0);\r\n    const {pagination} = useParams();\r\n\r\n    useEffect(() => {\r\n        // TODO: reutilizar funcion :D\r\n        const changePage = () => {\r\n            if (pagination === undefined\r\n                || isNaN(parseInt(pagination))\r\n                || pagination < 0) {\r\n                    props.history.push(\"/proveedores/0\");\r\n                    showSuppliers(auth.authToken, 0);\r\n                    return;\r\n            }\r\n            setPage(parseInt(pagination));\r\n            showSuppliers(auth.authToken, pagination);\r\n        }\r\n\r\n        changePage();\r\n    }, [])\r\n\r\n    const goToPage = (nextOrPrev) => {\r\n        const nextPage = page + nextOrPrev;\r\n        setPage(nextPage);\r\n        if (nextPage === undefined\r\n            || isNaN(parseInt(nextPage))\r\n            || nextPage < 0) {\r\n                props.history.push(\"/proveedores/0\");\r\n                showSuppliers(auth.authToken, 0);\r\n                return;\r\n        }\r\n        props.history.push(`/proveedores/${nextPage}`);\r\n        showSuppliers(auth.authToken, nextPage);\r\n    }\r\n\r\n    const showSuppliers = async (token, page=0) => {\r\n        const supplierList = [];\r\n\r\n        await fetch(`${fetchBase}/proveedores?page=${page}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => supplierList.push(...data));\r\n\r\n        if (supplierList.length > 0) {\r\n            setSuppliers(supplierList);\r\n        } else {\r\n            goToPage(-1)\r\n        }\r\n    }\r\n\r\n    const deleteSupplier = async (id, token) => {\r\n        let response;\r\n\r\n        await fetch(`${fetchBase}/proveedor/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => response = res.status);\r\n\r\n        console.log(response);\r\n        if (response === 200) {\r\n            showSuppliers(token)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <h1 className=\"main-title\">Proveedores</h1>\r\n            <div className='suppliers'>\r\n                {/* <!-- Page wrapper/Container Section --> */}\r\n                <div className=\"container\">\r\n                    {/* <!-- Responsive Table Section --> */}\r\n                    <table className=\"responsive-table\">\r\n                        {/* <!-- Responsive Table Header Section --> */}\r\n                        <thead className=\"table-head\">\r\n                            <tr className=\"table-row\">\r\n                                <th className=\"table-head-title\">Id</th>\r\n                                <th className=\"table-head-title\">Nombre</th>\r\n                                <th className=\"table-head-title\">Localización</th>\r\n                                <th className=\"table-head-title\">Teléfono</th>\r\n                                <th className=\"table-head-title\">Email</th>\r\n                                <th className=\"table-head-title\">Código Postal</th>\r\n                                <th className=\"table-head-title\">Editar</th>\r\n                                <th className=\"table-head-title\">Borrar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {/* <!-- Responsive Table Body Section --> */}\r\n                        <tbody className=\"table-body\">\r\n                            {\r\n                                suppliers && suppliers.map(supplier =>\r\n                                <tr className=\"table-row\" key={supplier.id}>\r\n                                    <td className=\"table-body-text\">{supplier.id}</td>\r\n                                    <td className=\"table-body-text\">{supplier.name}</td>\r\n                                    <td className=\"table-body-text\">{supplier.location}</td>\r\n                                    <td className=\"table-body-text\">{supplier.phone}</td>\r\n                                    <td className=\"table-body-text\">{supplier.email}</td>\r\n                                    <td className=\"table-body-text\">{supplier.postcode}</td>\r\n                                    <td className=\"table-body-text table-body-btn\"><Link to={`/proveedor/${supplier.id}`} className=\"icon\"><FaIcons.FaEdit /></Link></td>\r\n                                    <td className=\"table-body-text table-body-btn\"><a className=\"icon\" onClick={() => deleteSupplier(supplier.id, auth.authToken)}><FaIcons.FaTrash /></a></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"btns\">\r\n                        <div className=\"btn-add\">\r\n                            <button><Link to={`/proveedor/nuevo`}>Añadir proveedor</Link></button>\r\n                        </div>\r\n                        <div className=\"btn-paginate\">\r\n                            <button onClick={() => goToPage(-1)}>Anterior</button>\r\n                            <button onClick={() => goToPage(1)}>Siguiente</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(Suppliers);\r\n","import React, {useEffect, useState} from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst EditProduct = (props) => {\r\n    const auth = Auth();\r\n    const [product, setProduct] = useState({\r\n        brand: '',\r\n        name: '',\r\n        color: '',\r\n        stock: '',\r\n        datePurchase: '',\r\n        pricePurchase: '',\r\n        priceSale: '',\r\n        discount: '',\r\n        discontinued: '',\r\n    })\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        getProductData(auth.authToken, id)\r\n    }, [])\r\n\r\n    const setProductValue = (e) => {\r\n        setProduct({ ...product, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const setCheckValue = (e) => {\r\n        setProduct({ ...product, [e.target.name]: e.target.checked});\r\n    }\r\n\r\n    const getProductData = async (token, id) => {\r\n        let product = {};\r\n\r\n        await fetch(`${fetchBase}/producto/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => product = data);\r\n        setProduct(product);\r\n    }\r\n\r\n    const updateProduct = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await fetch(`${fetchBase}/producto/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.authToken}`\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify(product)\r\n        })\r\n        props.history.push('/productos/0');\r\n    }\r\n\r\n    return (\r\n        <main className=\"edit\">\r\n            <h1 className=\"main-title\">Actualizar producto</h1>\r\n            <div className='editPage'>\r\n                <form onSubmit={updateProduct} className=\"form-update\">\r\n                    <label for=\"brand\">Marca</label>\r\n                    <input name=\"brand\" id=\"brand\" className=\"data\" defaultValue={product[\"brand\"]} onChange={setProductValue} />\r\n                    <label for=\"name\">Nombre</label>\r\n                    <input name=\"name\" id=\"name\" className=\"data\" defaultValue={product[\"name\"]} onChange={setProductValue} />\r\n                    <label for=\"color\">Color</label>\r\n                    <input name=\"color\" id=\"color\" className=\"data\" defaultValue={product[\"color\"]} onChange={setProductValue} />\r\n                    <label for=\"stock\">Stock</label>\r\n                    <input name=\"stock\" id=\"stock\" type=\"number\" className=\"data\" defaultValue={product[\"stock\"]} onChange={setProductValue} />\r\n                    <label name=\"datePurchase\">Fecha de compra</label>\r\n                    <input name=\"datePurchase\" id=\"datePurchase\" type=\"date\" className=\"data\" defaultValue={product[\"datePurchase\"]} onChange={setProductValue} />\r\n                    <label name=\"pricePurchase\">Precio de compra</label>\r\n                    <input name=\"pricePurchase\" id=\"pricePurchase\" type=\"number\" className=\"data\" defaultValue={product[\"pricePurchase\"]} onChange={setProductValue} />\r\n                    <label for=\"priceSale\">Precio de venta</label>\r\n                    <input name=\"priceSale\" id=\"priceSale\" type=\"number\" className=\"data\" defaultValue={product[\"priceSale\"]} onChange={setProductValue} />\r\n                    <label for=\"discount\">Descuento</label>\r\n                    <input name=\"discount\" id=\"discount\" type=\"number\" className=\"data\" defaultValue={product[\"discount\"]} onChange={setProductValue} />\r\n                    <div class=\"checkMarkDiv\">\r\n                        <input name=\"discontinued\" id=\"discontinued\" className=\"checkMark\" type=\"checkbox\" checked={product[\"discontinued\"]} onChange={setCheckValue} />\r\n                        <label for=\"discontinued\">Descatalogado</label>\r\n                    </div>\r\n                    <button className=\"edit\" type=\"submit\">Actualizar</button>\r\n                 </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(EditProduct);","import React, {useEffect, useState} from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst EditShop = (props) => {\r\n    const auth = Auth();\r\n    const [shop, setShop] = useState({\r\n        name: '',\r\n        location: '',\r\n        phone: '',\r\n        email: '',\r\n        postcode: '',\r\n    })\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        getShopData(auth.authToken, id)\r\n    }, [])\r\n\r\n    const setShopValue = (e) => {\r\n        setShop({ ...shop, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const setCheckValue = (e) => {\r\n        setShop({ ...shop, [e.target.name]: e.target.checked});\r\n    }\r\n\r\n    const getShopData = async (token, id) => {\r\n        let shop = {};\r\n\r\n        await fetch(`${fetchBase}/tienda/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => shop = data);\r\n        setShop(shop);\r\n    }\r\n\r\n    const updateShop = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await fetch(`${fetchBase}/tienda/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.authToken}`\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify(shop)\r\n        })\r\n        props.history.push('/tiendas/0');\r\n    }\r\n\r\n    return (\r\n        <main className=\"edit\">\r\n            <h1 className=\"main-title\">Actualizar Tienda</h1>\r\n            <div className='editPage'>\r\n                <form onSubmit={updateShop} className=\"form-update\">\r\n                    <label for=\"name\">Nombre</label>\r\n                    <input name=\"name\" id=\"name\" className=\"data\" defaultValue={shop[\"name\"]} onChange={setShopValue} />\r\n                    <label for=\"location\">Localización</label>\r\n                    <input name=\"location\" id=\"location\" className=\"data\" defaultValue={shop[\"location\"]} onChange={setShopValue} />\r\n                    <label for=\"phone\">Teléfono</label>\r\n                    <input name=\"phone\" id=\"phone\" type=\"phone\" className=\"data\" defaultValue={shop[\"phone\"]} onChange={setShopValue} />\r\n                    <label name=\"email\">Email</label>\r\n                    <input name=\"email\" id=\"email\" type=\"email\" className=\"data\" defaultValue={shop[\"email\"]} onChange={setShopValue} />\r\n                    <label name=\"postcode\">Código Postal</label>\r\n                    <input name=\"postcode\" id=\"postcode\" type=\"text\" pattern=\"[0-9]{5}\" className=\"data\" defaultValue={shop[\"postcode\"]} onChange={setShopValue} />\r\n                    <button className=\"edit\" type=\"submit\">Actualizar</button>\r\n                 </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(EditShop);","import React, {useEffect, useState} from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst EditSupplier = (props) => {\r\n    const auth = Auth();\r\n    const [supplier, setSupplier] = useState({\r\n        name: '',\r\n        location: '',\r\n        phone: '',\r\n        email: '',\r\n        postcode: '',\r\n    })\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        getSupplierData(auth.authToken, id)\r\n    }, [])\r\n\r\n    const setSupplierValue = (e) => {\r\n        setSupplier({ ...supplier, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const setCheckValue = (e) => {\r\n        setSupplier({ ...supplier, [e.target.name]: e.target.checked});\r\n    }\r\n\r\n    const getSupplierData = async (token, id) => {\r\n        let supplier = {};\r\n\r\n        await fetch(`${fetchBase}/proveedor/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => supplier = data);\r\n        setSupplier(supplier);\r\n    }\r\n\r\n    const updateSupplier = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await fetch(`${fetchBase}/proveedor/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.authToken}`\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify(supplier)\r\n        })\r\n        props.history.push('/proveedores/0');\r\n    }\r\n\r\n    return (\r\n        <main className=\"edit\">\r\n            <h1 className=\"main-title\">Actualizar proveedor</h1>\r\n            <div className='editPage'>\r\n                <form onSubmit={updateSupplier} className=\"form-update\">\r\n                    <label for=\"name\">Nombre</label>\r\n                    <input name=\"name\" id=\"name\" className=\"data\" defaultValue={supplier[\"name\"]} onChange={setSupplierValue} />\r\n                    <label for=\"location\">Localización</label>\r\n                    <input name=\"location\" id=\"location\" className=\"data\" defaultValue={supplier[\"location\"]} onChange={setSupplierValue} />\r\n                    <label for=\"phone\">Teléfono</label>\r\n                    <input name=\"phone\" id=\"phone\" type=\"phone\" className=\"data\" defaultValue={supplier[\"phone\"]} onChange={setSupplierValue} />\r\n                    <label name=\"email\">Email</label>\r\n                    <input name=\"email\" id=\"email\" type=\"email\" className=\"data\" defaultValue={supplier[\"email\"]} onChange={setSupplierValue} />\r\n                    <label name=\"postcode\">Código Postal</label>\r\n                    <input name=\"postcode\" id=\"postcode\" className=\"data\" type=\"data\" pattern=\"[0-9]{5}\" defaultValue={supplier[\"postcode\"]} onChange={setSupplierValue} />\r\n                    <button className=\"edit\" type=\"submit\">Actualizar</button>\r\n                 </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(EditSupplier);","import React, {useEffect, useState} from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst EditUser = (props) => {\r\n    const auth = Auth();\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        getUserData(auth.authToken, id)\r\n    }, [])\r\n\r\n    const setUserValue = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const setCheckValue = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.checked});\r\n    }\r\n\r\n    const getUserData = async (token, id) => {\r\n        let user = {};\r\n\r\n        await fetch(`${fetchBase}/usuario/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => user = data);\r\n        setUser(user);\r\n    }\r\n\r\n    const updateUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await fetch(`${fetchBase}/usuario/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.authToken}`\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify(user)\r\n        })\r\n        props.history.push('/usuarios/0');\r\n    }\r\n\r\n    return (\r\n        <main className=\"edit\">\r\n            <h1 className=\"main-title\">Actualizar Usuario</h1>\r\n            <div className='editPage'>\r\n                <form onSubmit={updateUser} className=\"form-update\">\r\n                    <label for=\"name\">Nombre</label>\r\n                    <input name=\"name\" id=\"name\" className=\"data\" defaultValue={user[\"name\"]} onChange={setUserValue} />\r\n                    <label for=\"surname\">Apellidos</label>\r\n                    <input name=\"surname\" id=\"surname\" className=\"data\" defaultValue={user[\"surname\"]} onChange={setUserValue} />\r\n                    <label for=\"email\">Email</label>\r\n                    <input name=\"email\" id=\"email\" type=\"email\" className=\"data\" defaultValue={user[\"email\"]} onChange={setUserValue} />\r\n                    {/* <label name=\"email\">Contraseña</label>\r\n                    <input name=\"password\" id=\"password\" type=\"password\" className=\"data\" defaultValue={user[\"password\"]} onChange={setUserValue} /> */}\r\n                    <button className=\"edit\" type=\"submit\">Actualizar</button>\r\n                 </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(EditUser);","import React, {useEffect, useState} from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst AddProduct = (props) => {\r\n    const auth = Auth();\r\n    const [product, setProduct] = useState({\r\n        brand: '',\r\n        name: '',\r\n        color: '',\r\n        stock: '',\r\n        datePurchase: '',\r\n        pricePurchase: '',\r\n        priceSale: '',\r\n        discount: '',\r\n        discontinued: '',\r\n        categories: []\r\n    });\r\n\r\n    const [categories, setCategories] = useState(undefined);\r\n\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        getCategories(auth.authToken);\r\n    }, []);\r\n\r\n    const setProductValue = (e) => {\r\n        setProduct({ ...product, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const setCheckValue = (e) => {\r\n        setProduct({ ...product, [e.target.name]: e.target.checked});\r\n    }\r\n\r\n    const getCategories = async () => {\r\n        await fetch(`${fetchBase}/categorias`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.authToken}`\r\n            },\r\n            mode: \"cors\",\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setCategories(data));\r\n    }\r\n\r\n    const setCategory = (e, category) => {\r\n        if (e.target.checked) {\r\n            product.categories.push({\r\n                id: category.id,\r\n                name: category.name\r\n            });\r\n\r\n        } else {\r\n            product.categories = product.categories.filter(c => c.id !== category.id)\r\n        }\r\n    }\r\n\r\n    const addProduct = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await fetch(`${fetchBase}/producto/nuevo`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.authToken}`\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify(product)\r\n        })\r\n        props.history.push('/productos/0');\r\n    }\r\n\r\n    return (\r\n        <main className=\"add\">\r\n            <h1 className=\"main-title\">Añadir producto</h1>\r\n            <div className='addPage'>\r\n                <form onSubmit={addProduct} className=\"form-add\">\r\n                    <label for=\"brand\">Marca</label>\r\n                    <input name=\"brand\" id=\"brand\" className=\"data\" defaultValue={product[\"brand\"]} onChange={setProductValue} />\r\n                    <label for=\"name\">Nombre</label>\r\n                    <input name=\"name\" id=\"name\" className=\"data\" defaultValue={product[\"name\"]} onChange={setProductValue} />\r\n                    <label for=\"color\">Color</label>\r\n                    <input name=\"color\" id=\"color\" className=\"data\" defaultValue={product[\"color\"]} onChange={setProductValue} />\r\n                    <label for=\"stock\">Stock</label>\r\n                    <input name=\"stock\" id=\"stock\" type=\"number\" className=\"data\" defaultValue={product[\"stock\"]} onChange={setProductValue} />\r\n                    <label name=\"datePurchase\">Fecha de compra</label>\r\n                    <input name=\"datePurchase\" id=\"datePurchase\" type=\"date\" className=\"data\" defaultValue={product[\"datePurchase\"]} onChange={setProductValue} />\r\n                    <label name=\"pricePurchase\">Precio de compra</label>\r\n                    <input name=\"pricePurchase\" id=\"pricePurchase\" type=\"number\" className=\"data\" defaultValue={product[\"pricePurchase\"]} onChange={setProductValue} />\r\n                    <label for=\"priceSale\">Precio de venta</label>\r\n                    <input name=\"priceSale\" id=\"priceSale\" type=\"number\" className=\"data\" defaultValue={product[\"priceSale\"]} onChange={setProductValue} />\r\n                    <label for=\"discount\">Descuento</label>\r\n                    <input name=\"discount\" id=\"discount\" type=\"number\" className=\"data\" defaultValue={product[\"discount\"]} onChange={setProductValue} />\r\n                    <div class=\"checkMarkDiv\">\r\n                        <input name=\"discontinued\" id=\"discontinued\" className=\"checkMark\" type=\"checkbox\" checked={product[\"discontinued\"]} onChange={setCheckValue} />\r\n                        <label for=\"discontinued\">Descatalogado</label>\r\n                    </div>\r\n                    <div className=\"categories\">\r\n                        <span>Categorías</span>\r\n                        {categories && categories.map(category =>\r\n                            <div class=\"checkMarkDiv\">\r\n                                <input id={category.name} className=\"checkMark\" type=\"checkbox\" onChange={(event) => setCategory(event, category)} />\r\n                                <label for={category.name}>{category.name}</label>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <button className=\"add\" type=\"submit\">Añadir</button>\r\n                 </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddProduct);","import React, {useEffect, useState} from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst AddShop = (props) => {\r\n    const auth = Auth();\r\n    const [shop, setShop] = useState({\r\n        name: '',\r\n        location: '',\r\n        phone: '',\r\n        email: '',\r\n        postcode: '',\r\n    })\r\n\r\n    const {id} = useParams();\r\n    \r\n    const setShopValue = (e) => {\r\n        setShop({ ...shop, [e.target.name]: e.target.value});\r\n    }\r\n\r\n\r\n    const addShop = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await fetch(`${fetchBase}/tienda/nuevo`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.authToken}`\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify(shop)\r\n        })\r\n        props.history.push('/tiendas/0');\r\n    }\r\n\r\n    return (\r\n        <main className=\"add\">\r\n            <h1 className=\"main-title\">Añadir Tienda</h1>\r\n            <div className='addPage'>\r\n                <form onSubmit={addShop} className=\"form-add\">\r\n                    <label for=\"name\">Nombre</label>\r\n                    <input name=\"name\" id=\"name\" className=\"data\" defaultValue={shop[\"name\"]} onChange={setShopValue} />\r\n                    <label for=\"location\">Localización</label>\r\n                    <input name=\"location\" id=\"location\" className=\"data\" defaultValue={shop[\"location\"]} onChange={setShopValue} />\r\n                    <label for=\"phone\">Teléfono</label>\r\n                    <input name=\"phone\" id=\"phone\" type=\"phone\" className=\"data\" defaultValue={shop[\"phone\"]} onChange={setShopValue} />\r\n                    <label name=\"email\">Email</label>\r\n                    <input name=\"email\" id=\"email\" type=\"email\" className=\"data\" defaultValue={shop[\"email\"]} onChange={setShopValue} />\r\n                    <label name=\"postcode\">Código Postal</label>\r\n                    <input name=\"postcode\" id=\"postcode\" type=\"text\" pattern=\"[0-9]{5}\" className=\"data\" defaultValue={shop[\"postcode\"]} onChange={setShopValue} />\r\n                    <button className=\"add\" type=\"submit\">Añadir</button>\r\n                 </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddShop);","import React, {useEffect, useState} from 'react';\r\nimport { fetchBase } from '../utils/Const';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst AddSupplier = (props) => {\r\n    const auth = Auth();\r\n    const [supplier, setSupplier] = useState({\r\n        name: '',\r\n        location: '',\r\n        phone: '',\r\n        email: '',\r\n        postcode: '',\r\n    })\r\n\r\n    const {id} = useParams();\r\n\r\n    const setSupplierValue = (e) => {\r\n        setSupplier({ ...supplier, [e.target.name]: e.target.value});\r\n    }\r\n\r\n\r\n    const updateSupplier = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await fetch(`${fetchBase}/proveedor/nuevo`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth.authToken}`\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify(supplier)\r\n        })\r\n        props.history.push('/proveedores/0');\r\n    }\r\n\r\n    return (\r\n        <main className=\"add\">\r\n            <h1 className=\"main-title\">Añadir proveedor</h1>\r\n            <div className='addPage'>\r\n                <form onSubmit={updateSupplier} className=\"form-update\">\r\n                    <label for=\"name\">Nombre</label>\r\n                    <input name=\"name\" id=\"name\" className=\"data\" defaultValue={supplier[\"name\"]} onChange={setSupplierValue} />\r\n                    <label for=\"location\">Localización</label>\r\n                    <input name=\"location\" id=\"location\" className=\"data\" defaultValue={supplier[\"location\"]} onChange={setSupplierValue} />\r\n                    <label for=\"phone\">Teléfono</label>\r\n                    <input name=\"phone\" id=\"phone\" type=\"phone\" className=\"data\" defaultValue={supplier[\"phone\"]} onChange={setSupplierValue} />\r\n                    <label name=\"email\">Email</label>\r\n                    <input name=\"email\" id=\"email\" type=\"email\" className=\"data\" defaultValue={supplier[\"email\"]} onChange={setSupplierValue} />\r\n                    <label name=\"postcode\">Código Postal</label>\r\n                    <input name=\"postcode\" id=\"postcode\" className=\"data\" type=\"data\" pattern=\"[0-9]{5}\" defaultValue={supplier[\"postcode\"]} onChange={setSupplierValue} />\r\n                    <button className=\"add\" type=\"submit\">Añadir</button>\r\n                 </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddSupplier);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p><Link to=\"/\">Stock Control</Link></p>\r\n            <p>Realizado por Paula Pavón Montañez</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {useEffect} from 'react'\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Auth} from '../utils/Auth';\r\n\r\nconst Logout = (props) => {\r\n\r\n    const auth = Auth();\r\n\r\n    useEffect(() => {\r\n        const logout = () => {\r\n            auth.logout();\r\n            props.history.push(\"/\")\r\n        }\r\n\r\n        logout();\r\n    }, [])\r\n\r\n    return (\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default withRouter(Logout)","// import logo from './logo.svg';\nimport React, {useState} from 'react';\nimport './css/App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Users from './components/Users';\nimport Products from './components/Products';\nimport Shops from './components/Shops';\nimport Suppliers from './components/Suppliers';\nimport EditProduct from './components/EditProduct';\nimport EditShop from './components/EditShop';\nimport EditSupplier from './components/EditSupplier';\nimport EditUser from './components/EditUser';\nimport AddProduct from './components/AddProduct';\nimport AddShop from './components/AddShop';\nimport AddSupplier from './components/AddSupplier';\nimport Footer from './components/Footer';\nimport Logout from './components/Logout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"background\">\n        <img src=\"/img/bg.svg\" alt=\"imagen fondo vectorial\"/>\n      </div>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact>\n            <Login />\n          </Route>\n          <Route path='/register' exact>\n            <Register />\n          </Route>\n          <Route path='/logout'>\n            <Logout />\n          </Route>\n          <Route path='/usuarios/:pagination'>\n            <Users />\n          </Route>\n          <Route path='/usuario/:id'>\n            <EditUser />\n          </Route>\n          <Route path='/productos/:pagination'>\n            <Products />\n          </Route>\n          <Route path='/producto/nuevo' exact>\n            <AddProduct />\n          </Route>\n          <Route path='/producto/:id'>\n            <EditProduct />\n          </Route>\n          <Route path='/tiendas/:pagination'>\n            <Shops />\n          </Route>\n          <Route path='/tienda/nuevo' exact>\n            <AddShop />\n          </Route>\n            <Route path='/tienda/:id'>\n            <EditShop />\n          </Route>\n          <Route path='/proveedores/:pagination'>\n            <Suppliers />\n          </Route>\n          <Route path='/proveedor/nuevo' exact>\n            <AddSupplier />\n          </Route>\n          <Route path='/proveedor/:id'>\n            <EditSupplier />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}